@charset "UTF-8";
@import "../_const";

blockquote,
body,
button,
dd,
dl,
dt,
form,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
input,
legend,
li,
ol,
p,
pre,
td,
textarea,
th,
ul {
    margin: 0;
    padding: 0;
}

p {
    margin-bottom: $blank-normal;
}

body,
button,
input,
select,
textarea {
    font: 12px / 1.5 arial;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: 100%;
}

address,
cite,
dfn,
em,
var {
    font-style: normal;
}

code,
kbd,
pre,
samp {
    font-family: couriernew, courier, monospace;
}

small {
    font-size: 12px;
}

ol,
ul {
    list-style: none;
}

a {
    text-decoration: none;
    cursor: pointer;
}

a:hover {
    text-decoration: underline;
}

sup {
    vertical-align: text-top;
}

sub {
    vertical-align: text-bottom;
}

fieldset,
img {
    border: 0;
}

button,
input,
select,
textarea {
    font-size: 100%;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

.clear-float {
    &:after {
        content: '.cf';
        height: 0;
        visibility: hidden;
        clear: both;
        display: block;
    }
}

.ellipsis {
    @extend %ph-ellipsis;
}

input {
    outline: 0 none;
}

input:-ms-clear {
    display: none;
}

input:-webkit-search-cancel-button {
    display: none;
}

.link {
    display: inline-block;
    border: 0 none;
    padding: 0;
    background-color: transparent;
    text-decoration: none;
    color: map-get($color, 'primary');
    outline: none;
    cursor: pointer;
    @extend %transition;

    &:hover {
        text-decoration: underline;
    }
}

$c: map-get($color, 'primary');
$cl: map-get($color-light, 'primary');
$cd: map-get($color-dark, 'primary');

.btn {
    display: inline-block;
    padding: 0 $h-normal / 2;
    white-space: nowrap;
    font-size: $f-s-normal;
    text-align: center;
    height: $h-normal;
    line-height: $h-normal - 2px;
    text-decoration: none;
    outline-style: none;
    border: 1px solid map-get($color, 'border');
    color: map-get($color, 'font');
    background-color: map-get($color, 'bg');
    cursor: pointer;
    @extend %border-radius;
    @extend %box-sizing;
    @extend %transition;

    &.btn-small {
        padding: $blank-small / 2 $blank-small;
        height: auto;
        line-height: 100%;
        @include border-radius(2px);
    }

    &:hover {
        color: $c;
        border-color: $c;
        text-decoration: none;
    }

    &:focus {
        color: $cd;
        border-color: $cd;
    }

    @each $t in primary, warning, danger, correct {
        $c: map-get($color, $t);
        $cl: map-get($color-light, $t);
        $cd: map-get($color-dark, $t);

        &.btn-#{$t} {
            border-color: $c;

            @if $t == 'warning' {
                color: map-get($color, 'font');
            } @else {
                color: #ffffff;
            }
            background-color: $c;

            &:hover {
                background-color: $cl;
                border-color: $cl;

                @if $t == 'warning' {
                    color: map-get($color, 'font');
                }
            }

            &:focus {
                background-color: $cd;
                border-color: $cd;
                color: #ffffff;
            }
        }
    }

    &.btn-disabled {
        @extend %BtnDisabled;
        &:hover {
            @extend %BtnDisabled;
        }
        &:focus {
            @extend %BtnDisabled;
        }
    }
}

.btn-group {
    display: inline-block;
    vertical-align: middle;
    font-size: 0;

    .btn {
        border-left-width: 0;
        @include border-radius(0);
        margin-left: 1px;

        &:first-child {
            border-left-width: 1px;
            @include border-radius(4px 0 0 4px);
        }

        &:last-child {
            @include border-radius(0 4px 4px 0);
        }
    }
}

@font-face {
    font-family: 'iconfont';  /* project id 339362 */
    src: url('//at.alicdn.com/t/font_339362_p8qpgl4ixokfn7b9.eot');
    src: url('//at.alicdn.com/t/font_339362_p8qpgl4ixokfn7b9.eot?#iefix') format('embedded-opentype'),
    url('//at.alicdn.com/t/font_339362_p8qpgl4ixokfn7b9.woff') format('woff'),
    url('//at.alicdn.com/t/font_339362_p8qpgl4ixokfn7b9.ttf') format('truetype'),
    url('//at.alicdn.com/t/font_339362_p8qpgl4ixokfn7b9.svg#iconfont') format('svg');
}

*,
*:after,
*:before {
    font-family: "iconfont" !important;
}

.iconfont {
    cursor: pointer;
    text-decoration: none;
    vertical-align: middle;
    display: inline-block;
    @extend %box-sizing;

    &:hover {
        text-decoration: none;
    }
}

.input {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    width: $w-normal;
    border: 0 none;
    font-size: $f-s-normal;
    height: $h-normal;
    @extend %border-radius;
    @extend %transition;
    @extend %box-sizing;

    & > input {
        display: inline-block;
        padding: $blank-small/2 $blank-small;
        height: 100%;
        width: 100%;
        border: 1px solid map-get($color, 'border');
        outline: none;
        @extend %border-radius;
        @extend %box-sizing;

        &:hover {
            border-color: $c;
        }

        &:focus {
            border-color: $c;
            @include box-shadow(0 0 3px $c);
        }
    }
}

input.input {
    padding: $blank-small/2 $blank-small;
    border: 1px solid map-get($color, 'border');

    &:hover {
        border-color: $c;
    }

    &:focus {
        border-color: $c;
        @include box-shadow(0 0 3px $c);
    }
}

.input-error {
    $c: map-get($color, 'error');

    & > input,
    &.input {
        border-color: $c;

        &:hover {
            border-color: $c;
        }

        &:focus {
            border-color: $c;
            @include box-shadow(0 0 3px $c);
        }
    }
}

.feedback {
    & > input {
        padding-right: $blank-large;
    }

    &:after {
        position: absolute;
        right: $blank-small;
        top: 0;
        text-align: center;
        font-size: $f-s-normal;
        height: $h-normal - 2px;
        line-height: $h-normal - 2px;
        color: map-get($color, 'font');
    }
    @each $t in map-keys($status) {
        &.input-#{$t}:after {
            content: "#{map-get($status, $t)}";
            color: map-get($color, $t);
        }
    }
}

fieldset {
    margin-top: $blank-normal;
    border: 0 none;
    border-top: 1px solid map-get($color, 'line');
}

.switch {
    $h: $h-small;
    display: inline-block;
    vertical-align: middle;
    position: relative;
    border: 0 none;
    cursor: pointer;

    &:before {
        display: inline-block;
        content: attr(data-off);
        height: $h;
        line-height: $h;
        font-size: $f-s-small;
        border: 1px solid map-get($color, 'border');
        padding: 0 $h / 2 - 2px 0 $h + 2px;
        color: map-get($color, 'border');
        @include border-radius($h / 2);
        @extend %transition;
        @extend %box-sizing;
    }

    &:after {
        position: absolute;
        content: '';
        background: map-get($color, 'border');
        border: 0 none;
        top: 50%;
        left: $h / 6 + 1px;
        margin-top: -$h /3;
        right: auto;
        width: $h * 2 /3;
        height: $h * 2 /3;
        @include border-radius($h * 2 /3);
        @extend %transition;
    }

    &.onswitch {
        $h: $h-small;

        &:before {
            content: attr(data-on);
            color: map-get($color, 'bg');
            padding: 0 $h + 2px 0 $h / 2 - 2px;
            border-color: map-get($color, 'success');
            background-color: map-get($color, 'success');
        }

        &:after {
            left: auto;
            right: $h / 6 + 1px;
            background: map-get($color, 'bg');
        }
    }
}

.select {
    display: inline-block;
    cursor: pointer;
    position: relative;
    z-index: 90;

    .input {
        & > input {
            padding-right: $blank-large;
            cursor: pointer;
        }

        &:after {
            position: absolute;
            content: '';
            width: 0;
            height: 0;
            top: 50%;
            right: $blank-large / 2 - 5px;
            margin-top: -2.5px;
            border: 5px solid transparent;
            border-bottom: 0;
            border-top-color: map-get($color, 'font');
            @extend %transition;
        }
    }

    .options,
    dl {
        position: absolute;
        display: none;
        left: 0;
        top: $h-normal + 3px;
        width: $w-normal;
        padding: $blank-small 0;
        background-color: map-get($color, 'bg');
        border: 1px solid map-get($color, 'border');
        @extend %border-radius;
        @extend %box-sizing;
        @include transition(top 1s);
        z-index: 60;

        .option,
        dd {
            display: inline-block;
            padding: 0 $blank-small;
            width: 100%;
            height: $h-normal;
            line-height: $h-normal;
            color: map-get($color, 'font');
            font-size: $f-s-small;
            @extend %box-sizing;
            @extend %transition;

            &:hover {
                background-color: map-get($color-dark, 'bg');
            }

            &.current {
                background-color: map-get($color, 'success');
                color: map-get($color, 'bg');
            }
        }
    }

    &.selected {
        .input {
            &:after {
                transform: rotate(360deg);
                border-top: 0;
                border-bottom: 5px solid map-get($color, 'font');
            }
        }

        .options,
        dl {
            display: inline-block;
            @extend .anim-show-scaleY;
        }
    }
}

input[type='checkbox'] {
    position: absolute;
    left: 0;
    top: 0;
    visibility: hidden;
}

.checkboxs {
    &.some {
        &:before {
            content: '';
            background-color: map-get($color, 'bg');
            border-color: $c;
            border-width: ($f-s-normal / 2) ($f-s-normal / 4);
        }
    }

    &.some.disabled {
        &:before {
            background-color: map-get($color, 'bg');
        }
    }

    &.all {
        &:before {
            content: '\e60d';
            color: #ffffff;
            border-color: $c;
            background-color: $c;
        }
    }
    @extend .checkbox;
}

.checkbox {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    padding: 0 $blank-normal 0 $blank-large;
    cursor: pointer;

    &:before {
        position: absolute;
        display: inline-block;
        vertical-align: middle;
        content: '';
        width: $f-s-normal + 2px;
        height: $f-s-normal + 2px;
        line-height: $f-s-normal;
        text-align: center;
        font-size: $f-s-small;
        left: 0;
        top: 50%;
        margin-top: -($f-s-normal / 2 + 1px);
        border: 1px solid map-get($color, 'border');
        @extend %border-radius;
        @extend %transition;
        @extend %box-sizing;
    }

    &:hover:before {
        border-color: $c;
    }

    &.checked {
        &:before {
            content: '\e60d';
            color: #ffffff;
            border-color: $c;
            background-color: $c;
        }
    }

    &.disabled {
        $c: map-get($color-dark, 'disabled');
        cursor: not-allowed;
        color: map-get($color-light, 'font');

        &:before {
            border-color: $c;
            background-color: $c;
        }
    }
}

.fd-msgs {
    position: absolute;
    height: 0;
    top: $blank-normal;
    left: 0;
    right: 0;
    z-index: 999;

    .fd-msg {
        display: block;
        margin-bottom: $blank-normal*2+$f-s-small;
        height: 0;
        pointer-events: none;
        text-align: center;

        .fd-msg-content {
            position: relative;
            display: inline-block;
            vertical-align: middle;
            background: map-get($color, 'bg');
            font-size: $f-s-small;
            padding: $blank-small $blank-normal $blank-small $blank-normal + 20px;
            border: 1px solid map-get($color, 'border');
            white-space: nowrap;
            color: map-get($color, 'font');
            pointer-events: all;
            @extend %border-radius;
            @include box-shadow(0 0 3px map-get($color, 'border'));

            &:before {
                position: absolute;
                content: '\e73e';
                font-size: $f-s-normal;
                display: inline-block;
                vertical-align: middle;
                color: map-get($color, 'info');
                left: $blank-normal;
            }
            @each $t in map-keys($status) {
                &[type=#{$t}]:before {
                    content: "#{map-get($status, $t)}";
                    color: map-get($color, $t);
                }
            }
        }
    }
}

.card {
    display: inline-block;
    border: 1px solid map-get($color-light, 'border');
    background: map-get($color-light, 'bg');
    margin-right: $blank-normal;
    margin-bottom: $blank-normal;
    @extend %border-radius;
    @extend %transition;

    &:hover {
        border-color: map-get($color-dark, 'border');
        @extend %box-shadow;
    }
}

.tab-list {
    display: inline-block;
    text-align: right;
    width: 100%;
    border-bottom: 1px dashed map-get($color, 'line');
    margin-bottom: $blank-small;

    .tab {
        position: relative;
        float: left;
        cursor: pointer;
        color: map-get($color-light, 'primary');
        padding: $blank-small $blank-normal;
        @extend %transition;

        &:after {
            position: absolute;
            bottom: -2px;
            content: ' ';
            left: 0;
            right: 0;
            width: 100%;
            height: 2px;
            background: transparent;
            @include transform(scale(0));
            @include transition(transform .3s);
        }

        &:hover{
            color: map-get($color, 'primary');
            &:after{
                background: currentColor;
                @include transform(scale(1));
            }
        }

        &.current{
            color: map-get($color, 'danger');
            &:after{
                background: currentColor;
                @include transform(scale(1));
            }
        }

        .switch, button {
            margin-right: $blank-small;
        }
    }
    &.tab-btn{
        padding: $blank-small;

        .tab {
            float: left;
            cursor: pointer;
            position: relative;
            padding: $blank-small $blank-normal;
            color: map-get($color, 'bg');

            &:after {
                @extend %full-absolute;
                height: auto;
                @include transform(skewX(-25deg));
                background: map-get($color-light, 'font');
                z-index: -1;
                @extend %transition;
            }

            &.current, &:hover {
                &:after {
                    background: map-get($color-light, 'b');
                }
            }
        }
    }
}

.drop-down-list {
    @extend .select;

    span {
        position: relative;
        display: inline-block;
        padding: 0 $blank-large 0 $blank-normal;
        @extend %box-sizing;

        &:after {
            position: absolute;
            display: inline-block;
            right: 8px;
            text-align: center;
            vertical-align: middle;
            font-size: 14px;
            color: map-get($color, 'font');
            content: "\e602";
        }
    }

    .options,
    dl {
        top: 0;
        width: auto;
        line-height: 1.2;
        @extend %box-shadow;
    }

    &:hover {
        .options,
        dl {
            display: inline-block;
            @extend .anim-show-scaleY;
        }
    }
}